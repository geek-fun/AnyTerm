name: distributions release

on:
  push:
    branches:  [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-release:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [20.x]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Github checkout
        uses: actions/checkout@v4
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        if: matrix.os == 'ubuntu-latest'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: npm ci --legacy-peer-deps
      - run: npm run lint:check
      - run: npm audit --audit-level=critical
      - run: npm run test:ci
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - run: npm run build
      - name: Generate changelog
        uses: jaywcjlove/changelog-generator@main
        id: changelog
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag Release
        uses: jaywcjlove/create-tag-action@main
        id: tag_release
        with:
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ${{ steps.changelog.outputs.compareurl }}

            ${{ steps.changelog.outputs.changelog }}
      - name: Release App
        uses: tauri-apps/tauri-action@v0
        if: steps.tag_release.outputs.successful
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ steps.tag_release.outputs.version }}
          releaseName: ${{ steps.tag_release.outputs.version }}
          appVersion: "${{ steps.tag_release.outputs.versionNumber }}"
          releaseBody: |
            ${{ steps.changelog.outputs.compareurl }}

            ${{ steps.changelog.outputs.changelog }}

          releaseDraft: false
          prerelease: false
